// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// inner_loop_general_rcpp
List inner_loop_general_rcpp(const arma::mat& X, arma::mat& Rbar, arma::mat& mu1, const arma::mat& V, const arma::mat& Vinv, const arma::vec& w0, const arma::cube& S0, const List& precomp_quants_list, bool standardize, bool compute_ELBO, bool update_V);
RcppExport SEXP _mr_mash_alpha_inner_loop_general_rcpp(SEXP XSEXP, SEXP RbarSEXP, SEXP mu1SEXP, SEXP VSEXP, SEXP VinvSEXP, SEXP w0SEXP, SEXP S0SEXP, SEXP precomp_quants_listSEXP, SEXP standardizeSEXP, SEXP compute_ELBOSEXP, SEXP update_VSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type Rbar(RbarSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type mu1(mu1SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type V(VSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Vinv(VinvSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w0(w0SEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type S0(S0SEXP);
    Rcpp::traits::input_parameter< const List& >::type precomp_quants_list(precomp_quants_listSEXP);
    Rcpp::traits::input_parameter< bool >::type standardize(standardizeSEXP);
    Rcpp::traits::input_parameter< bool >::type compute_ELBO(compute_ELBOSEXP);
    Rcpp::traits::input_parameter< bool >::type update_V(update_VSEXP);
    rcpp_result_gen = Rcpp::wrap(inner_loop_general_rcpp(X, Rbar, mu1, V, Vinv, w0, S0, precomp_quants_list, standardize, compute_ELBO, update_V));
    return rcpp_result_gen;
END_RCPP
}
// compute_mixsqp_update_loop_rcpp
arma::mat compute_mixsqp_update_loop_rcpp(const arma::mat& X, const arma::mat& Rbar, const arma::mat& V, const arma::cube& S0, const arma::mat& mu1, const arma::mat& Vinv, const List& precomp_quants_list, bool standardize);
RcppExport SEXP _mr_mash_alpha_compute_mixsqp_update_loop_rcpp(SEXP XSEXP, SEXP RbarSEXP, SEXP VSEXP, SEXP S0SEXP, SEXP mu1SEXP, SEXP VinvSEXP, SEXP precomp_quants_listSEXP, SEXP standardizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Rbar(RbarSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type V(VSEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type S0(S0SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mu1(mu1SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Vinv(VinvSEXP);
    Rcpp::traits::input_parameter< const List& >::type precomp_quants_list(precomp_quants_listSEXP);
    Rcpp::traits::input_parameter< bool >::type standardize(standardizeSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_mixsqp_update_loop_rcpp(X, Rbar, V, S0, mu1, Vinv, precomp_quants_list, standardize));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mr_mash_alpha_inner_loop_general_rcpp", (DL_FUNC) &_mr_mash_alpha_inner_loop_general_rcpp, 11},
    {"_mr_mash_alpha_compute_mixsqp_update_loop_rcpp", (DL_FUNC) &_mr_mash_alpha_compute_mixsqp_update_loop_rcpp, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_mr_mash_alpha(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
